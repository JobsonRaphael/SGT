/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerTarefa;
import dao.DaoTarefa;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.ModelTarefa;

/**
 *
 * @author PICHAU
 */
public class FrmListarTarefas extends javax.swing.JFrame {
    
    
List<ModelTarefa> listaTarefa =  new ArrayList<ModelTarefa>();
    /**
     * Creates new form FrmListarTarefas
     * @param idUser
     */
    
    int usuarioLogado;
    public FrmListarTarefas(int idUser) {
        usuarioLogado = idUser;
         DaoTarefa daoTarefa = new DaoTarefa();
        
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel)jTableTarefas.getModel();
        modelo.setNumRows(0);
         
         listaTarefa = daoTarefa.buscarTarefas(idUser);
         
        for(ModelTarefa tarefa : listaTarefa){
            
             Date horaInicio = tarefa.getHoraInicio();
             Date horaFim = tarefa.getHoraFim();
             DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
             DateFormat horaFormat = new SimpleDateFormat("HH:mm:ss");
        
             String horaFormatadaInicio = horaFormat.format(horaInicio);
             String horaFormatadaFim = horaFormat.format(horaFim);
             modelo.addRow(new Object[]{
             tarefa.getTitulo(),
             Integer.toString(tarefa.getPrioridade()),
             horaFormatadaInicio,
             horaFormatadaFim
            
             
         });
    }
   
        
}   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTarefas = new javax.swing.JTable();
        jButtonDeletar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuCadastrarTarefa = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableTarefas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Título", "Prioridade", "Hora Início", "Hora Fim"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableTarefas.setColumnSelectionAllowed(true);
        jTableTarefas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableTarefas.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                jTableTarefasAncestorRemoved(evt);
            }
        });
        jTableTarefas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTableTarefasFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTableTarefas);
        jTableTarefas.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jButtonDeletar.setText("Deletar");
        jButtonDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletarActionPerformed(evt);
            }
        });

        jMenu1.setText("Tarefas");

        jMenuCadastrarTarefa.setText("Cadastrar");
        jMenuCadastrarTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCadastrarTarefaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCadastrarTarefa);

        jMenuItem2.setText("Consultar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Perfil");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Configurações");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 795, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDeletar)
                .addGap(211, 211, 211))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDeletar)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuCadastrarTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCadastrarTarefaActionPerformed
        // TODO add your handling code here:
        FrmCadastrarTarefa frmCadastrarTarefa = new FrmCadastrarTarefa();
           frmCadastrarTarefa.setVisible(true);
           frmCadastrarTarefa.setResizable(false);
           frmCadastrarTarefa.setUser(usuarioLogado);
        this.dispose();
        
       
       
        
    }//GEN-LAST:event_jMenuCadastrarTarefaActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTableTarefasAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTableTarefasAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableTarefasAncestorRemoved

    private void jTableTarefasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableTarefasFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableTarefasFocusGained

    private void jButtonDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletarActionPerformed

        int index = jTableTarefas.getSelectedRow();
         
         ModelTarefa mTarefa = listaTarefa.get(index);
         
         ControllerTarefa controllerTarefa = new ControllerTarefa();
         if(controllerTarefa.removerTarefa(mTarefa)){
             
             this.dispose();
            new FrmListarTarefas(usuarioLogado).setVisible(true);
             
             
//            DaoTarefa daoTarefa = new DaoTarefa();
        
//        initComponents();
//        DefaultTableModel modelo = (DefaultTableModel)jTableTarefas.getModel();
//        modelo.setNumRows(0);
//         
//         listaTarefa = daoTarefa.buscarTarefas(usuarioLogado);
//         
//        for(ModelTarefa tarefa : listaTarefa){
//            
//             Date horaInicio = tarefa.getHoraInicio();
//             Date horaFim = tarefa.getHoraFim();
//             DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
//             DateFormat horaFormat = new SimpleDateFormat("HH:mm:ss");
//        
//             String horaFormatadaInicio = horaFormat.format(horaInicio);
//             String horaFormatadaFim = horaFormat.format(horaFim);
//             modelo.addRow(new Object[]{
//             tarefa.getTitulo(),
//             Integer.toString(tarefa.getPrioridade()),
//             horaFormatadaInicio,
//             horaFormatadaFim
//            
//             
//         });
//    }
             
         }

    }//GEN-LAST:event_jButtonDeletarActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
      
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmListarTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmListarTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmListarTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmListarTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(int id) {
                new FrmListarTarefas(id).setVisible(true);
            }

            @Override
            public void run() {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }
//git
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeletar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuCadastrarTarefa;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTarefas;
    // End of variables declaration//GEN-END:variables
}
